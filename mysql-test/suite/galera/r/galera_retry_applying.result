connection node_2;
connection node_1;
CALL mtr.add_suppression("Event .* Update_rows.* apply failed");
CALL mtr.add_suppression("Inconsistency detected");
CALL mtr.add_suppression("Failed to apply write set:.*");
CALL mtr.add_suppression("Event .* Write_rows.* apply failed");
CREATE TABLE t1 (f1 INTEGER PRIMARY KEY DEFAULT 0, f2 char(12));
CREATE TABLE t3 (f1 INTEGER PRIMARY KEY DEFAULT 0, f2 char(12));
START TRANSACTION;
INSERT INTO t3 (f1, f2) VALUES (1, 'a');
INSERT INTO t3 (f1, f2) VALUES (2, 'b');
INSERT INTO t3 (f1, f2) VALUES (3, 'c'), (4, 'd'), (5, 'e');
COMMIT;
connection node_2;
SET GLOBAL wsrep_applier_retry_count = 2;
SET GLOBAL debug_dbug = "d,apply_event_fail_once:o,/dev/null";
connection node_1;
START TRANSACTION;
UPDATE t3 SET f2 = 'ax' WHERE f1 = 1;
UPDATE t3 SET f2 = 'bx' WHERE f1 = 2;
INSERT INTO t1 (f1, f2) VALUES (3, 'c'), (4, 'd'), (5, 'e');
UPDATE t3 SET f2 = 'cx' WHERE f1 = 3;
UPDATE t3 SET f2 = 'dx' WHERE f1 = 4;
DELETE FROM t3 WHERE f1 = 5;
COMMIT;
connection node_2;
connection node_1;
SELECT COUNT(*) AS expect_3 FROM t1;
expect_3
3
SELECT COUNT(*) AS expect_4 FROM t3;
expect_4
4
connection node_2;
SELECT COUNT(*) AS expect_3 FROM t1;
expect_3
3
SELECT COUNT(*) AS expect_4 FROM t3;
expect_4
4
connection node_1;
DROP TABLE t1;
DROP TABLE t3;
connection node_2;
Shutting down server ...
SET wsrep_on=OFF;
Restarting server ...
connection node_1;
SET wsrep_sync_wait=0;
CREATE TABLE t2 (f1 INTEGER PRIMARY KEY DEFAULT 0, f2 char(12));
connection node_2;
SET GLOBAL wsrep_applier_retry_count = 2;
SET GLOBAL debug_dbug = '';
SET GLOBAL debug_dbug = "d,apply_event_fail_always:o,/dev/null";
connection node_1;
START TRANSACTION;
INSERT INTO t2 (f1, f2) VALUES (1, 'a'), (2, 'b');
COMMIT;
connection node_2;
Shutting down server ...
SET wsrep_on=OFF;
Restarting server ...
connection node_1;
SET wsrep_sync_wait=0;
connection node_2;
SELECT COUNT(*) AS expect_2 FROM t2;
expect_2
2
SET GLOBAL debug_dbug = DEFAULT;
connection node_1;
SET GLOBAL wsrep_applier_retry_count = 0;
SET DEBUG_SYNC = 'RESET';
DROP TABLE t2;
